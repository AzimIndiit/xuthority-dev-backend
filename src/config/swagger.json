{
  "openapi": "3.0.0",
  "info": {
    "title": "Xuthority API",
    "version": "1.0.0",
    "description": "Automatically generated API documentation.",
    "contact": {
      "name": "Xuthority",
      "url": "https://xuthority.com",
      "email": "support@xuthority.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "termsOfService": "https://xuthority.com/terms",
    "xuthority": "https://xuthority.com",
    "xuthorityDev": "https://xuthority-dev.com",
    "xuthorityDevApi": "http://localhost:8081/api/v1",
    "xuthorityDevApiDocs": "http://localhost:8081/api-docs",
    "xuthorityDevApiDocsSwagger": "http://localhost:8081/swagger.json",
    "xuthorityDevApiDocsSwaggerUi": "http://localhost:8081/api-docs",
    "xuthorityDevApiDocsSwaggerUiSwagger": "http://localhost:8081/swagger.json"
  },
  "servers": [
    {
      "url": "http://localhost:8081/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "password",
                  "acceptedTerms"
                ],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123!"
                  },
                  "acceptedTerms": {
                    "type": "boolean",
                    "example": true
                  },
                  "acceptedMarketing": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string",
                      "example": "Registration successful"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "statusCode": {
                          "type": "integer"
                        },
                        "details": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login with email and password",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "Password123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "statusCode": {
                          "type": "integer"
                        },
                        "details": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register-vendor": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new vendor",
        "description": "Register a new vendor account with company information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "password",
                  "companyName",
                  "companyEmail",
                  "industry",
                  "companySize",
                  "acceptedTerms"
                ],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "Vendor's first name",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Vendor's last name",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Vendor's email address",
                    "example": "john.doe@company.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "description": "Vendor's password (minimum 8 characters)",
                    "example": "securePassword123"
                  },
                  "companyName": {
                    "type": "string",
                    "description": "Company name",
                    "example": "Tech Solutions Inc"
                  },
                  "companyEmail": {
                    "type": "string",
                    "format": "email",
                    "description": "Company email address",
                    "example": "contact@techsolutions.com"
                  },
                  "industry": {
                    "type": "string",
                    "description": "Industry sector",
                    "example": "Technology"
                  },
                  "companySize": {
                    "type": "string",
                    "enum": [
                      "1-10",
                      "11-50",
                      "51-200",
                      "201-500",
                      "500+"
                    ],
                    "description": "Company size range",
                    "example": "51-200"
                  },
                  "acceptedTerms": {
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "description": "Whether terms and conditions were accepted",
                    "example": "true"
                  },
                  "acceptedMarketing": {
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "description": "Whether marketing communications were accepted",
                    "example": "false"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vendor registration successful (existing user with valid token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string",
                          "description": "JWT access token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Vendor registration successful"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Vendor registration successful (new user created)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string",
                          "description": "JWT access token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Vendor registration successful"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user profile",
        "description": "Update the authenticated user's profile fields",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Jane"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "region": {
                    "type": "string",
                    "example": "US"
                  },
                  "description": {
                    "type": "string",
                    "example": "Bio..."
                  },
                  "industry": {
                    "type": "string",
                    "example": "Tech"
                  },
                  "title": {
                    "type": "string",
                    "example": "CTO"
                  },
                  "companyName": {
                    "type": "string",
                    "example": "Acme Corp"
                  },
                  "companySize": {
                    "type": "string",
                    "example": "51-100 Employees"
                  },
                  "companyEmail": {
                    "type": "string",
                    "example": "contact@acme.com"
                  },
                  "socialLinks": {
                    "type": "object",
                    "properties": {
                      "linkedin": {
                        "type": "string",
                        "example": "https://linkedin.com/in/janedoe"
                      },
                      "twitter": {
                        "type": "string",
                        "example": "https://twitter.com/janedoe"
                      }
                    }
                  },
                  "acceptedMarketing": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Profile updated successfully"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User not found"
                        },
                        "code": {
                          "type": "string",
                          "example": "USER_NOT_FOUND"
                        },
                        "statusCode": {
                          "type": "integer",
                          "example": 404
                        },
                        "details": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Internal server error"
                        },
                        "code": {
                          "type": "string",
                          "example": "INTERNAL_ERROR"
                        },
                        "statusCode": {
                          "type": "integer",
                          "example": 500
                        },
                        "details": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}